#!/usr/bin/env php
<?php

$workingPath = getcwd();

require __DIR__.'/../vendor/autoload.php';

$files = new Illuminate\Filesystem\Filesystem();

Illuminate\Support\Collection::make([
    'resource.stub',
    'lens.stub',
    'partition.stub',
    'progress.stub',
    'table.stub',
    'trend.stub',
    'value.stub',
    'action.stub',
    'action.queued.stub',
    'destructive-action.stub',
    'destructive-action.queued.stub',
    'dashboard.stub',
])->transform(fn ($file) => "{$workingPath}/vendor/laravel/nova/src/Console/stubs/{$file}")
->map(fn ($file) => str_contains($file, '*') ? [...$files->glob($file)] : $file)
->flatten()
->each(function ($file) use ($files, $workingPath) {
    $files->copy($file, "{$workingPath}".Illuminate\Support\Str::after($file, "{$workingPath}/vendor/laravel/nova/src/Console"));
});

$files->copy("{$workingPath}/vendor/laravel/nova/src/Console/stubs/base-resource.stub", "{$workingPath}/stubs/base-resource.stub");
transform([
    "{{ namespace }}" => "Workbench\App\Nova",
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/stubs/base-resource.stub"));

$files->copy("{$workingPath}/vendor/laravel/nova/src/Console/stubs/main-dashboard.stub", "{$workingPath}/stubs/main-dashboard.stub");
transform([
    "namespace App\Nova\Dashboards" => "namespace {{ namespace }}",
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/stubs/main-dashboard.stub"));
